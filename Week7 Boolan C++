
1. OOP vs GP
 OOP intends to linke datas and methods
 GP intends to seprate datas and methods
2. Operator Overloading

When an operator appears in an expression, and at least one of its operands has a class type or an enumeration type, 
then overload resolution is used to determine the user-defined function to be called among all the functions 
estrictions
The operators :: (scope resolution), . (member access), .* (member access through pointer to member), and ?: (ternary conditional) cannot be overloaded.
New operators such as **, <>, or &| cannot be created.
The overloads of operators && and || lose short-circuit evaluation.
The overload of operator -> must either return a raw pointer or return an object (by reference or by value), for which operator -> is in turn overloaded.
It is not possible to change the precedence, grouping, or number of operands of operators.(http://en.cppreference.com/w/cpp/language/operators)

3. Class Template
template <typename T>
class complex{
public:
  complex(T r = 0, T i = 0) : re(r), im(i){}
}

4. Function Template
template <class T>
inline
const T& min(const T& a, const T& b){
 return b < a ? b : a;
}
5. Allocator
6. Sequence Containers
  a. array
  b. vector
  c. heap
  d. list
  e. deque
  f. stack
  g. queue
7. Associative Containers
  a.rb_tree
  b.set
  c.map
  d.multiset
  e multimap
  f.hashtable
  g.hash_set
  h.hash_map
  i.hash_multiset
  j.hash+multimap

 
 
  
